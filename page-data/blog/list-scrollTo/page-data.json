{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/list-scrollTo/","result":{"data":{"markdownRemark":{"html":"<p>Sometimes, we want our <code class=\"language-text\">List</code> to scroll to a certain row upon a button tap, or on View's <code class=\"language-text\">onAppear</code>.\nThis post explains how to scroll SwiftUI's <code class=\"language-text\">List</code> to a certain row programmatically.\nIn particular, this post programmatically scrolls a List whose data is populated using a <code class=\"language-text\">ForEach</code>.</p>\n<h3>Setting Up Our <code class=\"language-text\">List</code></h3>\n<ul>\n<li>First we set up our View and its ViewModel.</li>\n<li>The View has a <code class=\"language-text\">List</code> whose rows are populated using <code class=\"language-text\">ForEach</code> with data provided from its ViewModel.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-swift line-numbers\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token class-name\">SwiftUI</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ContentView</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">View</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attribute atrule\">@StateObject</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> contentViewModel <span class=\"token operator\">=</span> <span class=\"token class-name\">ContentViewModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  \n  <span class=\"token keyword\">var</span> body<span class=\"token punctuation\">:</span> <span class=\"token keyword\">some</span> <span class=\"token class-name\">View</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">List</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token class-name\">ForEach</span><span class=\"token punctuation\">(</span>contentViewModel<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> number <span class=\"token keyword\">in</span>\n            <span class=\"token class-name\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Number </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">number</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onAppear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        contentViewModel<span class=\"token punctuation\">.</span>numbers <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">..&lt;</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ContentViewModel</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">ObservableObject</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attribute atrule\">@Published</span> <span class=\"token keyword\">var</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>Scrolling To 60th Row On View Appear</h3>\n<ul>\n<li>Use <code class=\"language-text\">ScrollViewReader</code>. This gives us <code class=\"language-text\">scrollTo()</code> of a proxy that lets us programmatically scroll a <code class=\"language-text\">ScrollView</code>.</li>\n<li>Because we want the View to scroll on its appearnace, it might be tempting to add <code class=\"language-text\">scrollTo()</code> inside the <code class=\"language-text\">.onAppear()</code> of <code class=\"language-text\">VStack</code>.</li>\n<li>However, because the List's <code class=\"language-text\">ForEach</code> has not been rendered at the time of <code class=\"language-text\">VStack {} .onAppear()</code>, adding <code class=\"language-text\">scrollTo()</code> in <code class=\"language-text\">VStack</code>'s <code class=\"language-text\">onAppear()</code> is meaningless.</li>\n<li>Instead, we need to add <code class=\"language-text\">scrollTo()</code> inside .<code class=\"language-text\">onAppear()</code> of <code class=\"language-text\">ForEach{}</code>.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-swift line-numbers\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token class-name\">SwiftUI</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ContentView</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">View</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attribute atrule\">@StateObject</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> contentViewModel <span class=\"token operator\">=</span> <span class=\"token class-name\">ContentViewModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  \n  <span class=\"token keyword\">var</span> body<span class=\"token punctuation\">:</span> <span class=\"token keyword\">some</span> <span class=\"token class-name\">View</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">ScrollViewReader</span> <span class=\"token punctuation\">{</span> proxy <span class=\"token keyword\">in</span>\n      <span class=\"token class-name\">VStack</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">List</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token class-name\">ForEach</span><span class=\"token punctuation\">(</span>contentViewModel<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> number <span class=\"token keyword\">in</span>\n            <span class=\"token class-name\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Number </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">number</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">onAppear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            proxy<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onAppear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        contentViewModel<span class=\"token punctuation\">.</span>numbers <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">..&lt;</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ContentViewModel</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">ObservableObject</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attribute atrule\">@Published</span> <span class=\"token keyword\">var</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>Scrolling To 30th Row On Button Tap</h3>\n<ul>\n<li>Similar to the above example, we can add <code class=\"language-text\">scrollTo()</code> inside <code class=\"language-text\">Button</code>'s action closure.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-swift line-numbers\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token class-name\">SwiftUI</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ContentView</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">View</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attribute atrule\">@StateObject</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> contentViewModel <span class=\"token operator\">=</span> <span class=\"token class-name\">ContentViewModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  \n  <span class=\"token keyword\">var</span> body<span class=\"token punctuation\">:</span> <span class=\"token keyword\">some</span> <span class=\"token class-name\">View</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">ScrollViewReader</span> <span class=\"token punctuation\">{</span> proxy <span class=\"token keyword\">in</span>\n      <span class=\"token class-name\">VStack</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Button</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Jump to 30\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          proxy<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token class-name\">List</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token class-name\">ForEach</span><span class=\"token punctuation\">(</span>contentViewModel<span class=\"token punctuation\">.</span>numbers<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> number <span class=\"token keyword\">in</span>\n            <span class=\"token class-name\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Number </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">number</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">onAppear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            proxy<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onAppear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        contentViewModel<span class=\"token punctuation\">.</span>numbers <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">..&lt;</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ContentViewModel</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">ObservableObject</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attribute atrule\">@Published</span> <span class=\"token keyword\">var</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"title":"Scrolling List With ScrollViewReader","date":"11 July, 2022","intro":"This post explains how to programmatically scroll SwiftUI's List to a certain row.","tags":["SwiftUI"],"featuredImage":null}}},"pageContext":{"slug":"/blog/2022-07-11-List-ScrollTo/2022-07-11-list-scrollTo/"}},"staticQueryHashes":["2393440379","3159585216"],"slicesMap":{}}