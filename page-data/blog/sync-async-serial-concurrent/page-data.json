{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/sync-async-serial-concurrent/","result":{"data":{"markdownRemark":{"html":"<p>Asnychronous vs Synchronous and Concurrent vs Serial are two separate concepts.\nHowever, it is often confused as similar concepts.</p>\n<p>This post defines <code class=\"language-text\">Asnychronous vs Synchronous</code> and <code class=\"language-text\">Concurrent vs Serial</code>, and walks through four different combinations of the two concepts.</p>\n<h2>But First, What Is <code class=\"language-text\">DispatchQueue</code></h2>\n<ul>\n<li><code class=\"language-text\">DispatchQueue</code> is an object that manages the execution of tasks serially or concurrently on your app's main thread or on a background thread. (according to <a href=\"https://developer.apple.com/documentation/dispatch/dispatchqueue\">Apple</a>)</li>\n<li>Each task is executed in order it is added to a queue.</li>\n</ul>\n<h2>Serial vs Concurrent</h2>\n<ul>\n<li>\n<p>Serial vs Concurrent is about when the dispatched task can run.</p>\n</li>\n<li>\n<p>In a <strong>Serial Dispatch Queue</strong>, a block can assume that it's the only block running on that queue.</p>\n<ul>\n<li>A serial dispath queue performs one task at a time.</li>\n</ul>\n</li>\n<li>\n<p>In a <strong>Concurrent Dispatch Queue</strong>, a block can't assume that it's the only block running on that queue.</p>\n<ul>\n<li>A concurrent dispatch queue performs multiple tasks at a time.</li>\n<li>A task is started in the order it is added to the queue, but its finishing time may not be in the added order. (since they are executed <em>concurrently</em>)</li>\n</ul>\n</li>\n</ul>\n<h2>Synchronous vs Asynchronous</h2>\n<ul>\n<li>\n<p>Sync vs Async is about when the caller (of a task) can continue.</p>\n</li>\n<li>\n<p>The caller of <code class=\"language-text\">DispatchQueue.sync</code> will wait for its task block to complete. It can't move onto the next line until the task to finish.</p>\n</li>\n<li>\n<p>The caller of <code class=\"language-text\">DispatchQueue.async</code> will not wait for its task block to complete.</p>\n</li>\n</ul>\n<h2>Four Cases</h2>\n<p>Let's assume we are currently on the main thread.\nThis means we are calling <code class=\"language-text\">DispatchQueue</code> to run a task from the main thread.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-swift line-numbers\"><code class=\"language-swift\"><span class=\"token comment\">// currently on main thread. </span>\n\n<span class=\"token comment\">// calling async or sync.</span>\n<span class=\"token class-name\">DispatchQueue</span><span class=\"token punctuation\">.</span>sync <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>  <span class=\"token comment\">// run some task</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">DispatchQueue</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>  <span class=\"token comment\">// run some task</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>\n<p><strong>async - concurrent</strong></p>\n<ul>\n<li>Async: The task code runs on a different queue. Control returns immediately to the current queue of main thread.</li>\n<li>Concurrent: The task block may or may not be the only task running on that queue.</li>\n</ul>\n</li>\n<li>\n<p><strong>asnyc - serial</strong></p>\n<ul>\n<li>Async: The code runs on a different queue. Control returns immediately to the current queue of main thread.</li>\n<li>Serial: The block is the only block running on that queue.</li>\n</ul>\n</li>\n<li>\n<p><strong>sync - concurrent</strong></p>\n<ul>\n<li>Sync: The code runs on a different queue, but the main thread waits for it to finish, blocking any updates to the UI. (UI may be unresponsive to user's inputs.)</li>\n<li>Concurrent: The task block may or may not be the only task running on that queue.</li>\n</ul>\n</li>\n<li>\n<p><strong>sync - serial</strong></p>\n<ul>\n<li>Sync: The code runs on a differnet queue, but the main thread waits for it to finish, blocking any updates to the UI. (UI may be unresponsive to user's inputs.)</li>\n<li>Serial: The block is the only block running on that queue.</li>\n</ul>\n</li>\n</ul>\n<h2>What About <code class=\"language-text\">DispatchQueue.main.async</code> ?</h2>\n<ul>\n<li>This is dispatching asyncronously to the main thread itself.</li>\n<li>While working on current task, the main thread has scheduled another task block to be executed, but current task is not blocked by scheduling a new task.</li>\n</ul>","frontmatter":{"title":"DispatchQueue: Synchronous vs Asynchronous / Serial vs Concurrent","date":"05 July, 2022","intro":"This post defines `Asnychronous vs Synchronous` and `Concurrent vs Serial`, and walks through four different combinations of the two concepts.","tags":["Programming","Swift"],"featuredImage":null}}},"pageContext":{"slug":"/blog/2022-07-05-Sync vs Async and Concurrent vs Serial/2022-07-05-Sync-Async-and-Concurrent-Serial/"}},"staticQueryHashes":["2896309718","3159585216"],"slicesMap":{}}