{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/swiftui-list-maintain-scroll-position-when-appending-to-top/","result":{"data":{"markdownRemark":{"html":"<ul>\n<li>pagination에는 두 가지가 있다.\n<ul>\n<li>이미 로딩된 데이터보다 아래 방향 데이터를 불러오는 <code class=\"language-text\">loadNext()</code>와</li>\n<li>윗 방향 데이터를 불러오는 <code class=\"language-text\">loadPrevious()</code>가 있다.</li>\n<li>각각을 쉽게 <em>아래 방향 pagination</em>, <em>윗 방향 pagination</em>이라고 불러보자.</li>\n</ul>\n</li>\n<li>윗 방향 pagination이 사용되는 use case의 예로는 채팅의 메세지 리스트다.\n<ul>\n<li>채팅은 가장 최신 메세지부터 보인다 (List의 가장 하단부터 보인다). 사용자가 예전 메세지를 보기 위해 위로 스크롤하면, 이전 데이터를 가져온다 (<code class=\"language-text\">loadPrevious()</code>).</li>\n</ul>\n</li>\n<li>SwiftUI <code class=\"language-text\">List</code>로 윗 방향 pagination을 구현할때 발생할 수 있는 UI상의 문제와, 이걸 해결하는 방법에 대해 알아본다.</li>\n</ul>\n<h2>SwiftUI List로 윗 방향 pagination 구현하기</h2>\n<h3>베이스 코드</h3>\n<ul>\n<li>윗 방향 pagination 구현하기 전에, 먼저 베이스 코드를 만들자.</li>\n<li>코드 설명:\n<ul>\n<li><code class=\"language-text\">List</code>로 15 ~ 30번 메세지를 보여주고, (message 30이 가장 최신 메세지다)</li>\n<li>List의 가장 하단이 먼저 보이도록 했다. (message 30이 먼저 보인다)</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-swift line-numbers\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token class-name\">SwiftUI</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ContentView</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">View</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attribute atrule\">@StateObject</span> <span class=\"token keyword\">var</span> viewModel <span class=\"token operator\">=</span> <span class=\"token class-name\">ViewModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">var</span> body<span class=\"token punctuation\">:</span> <span class=\"token keyword\">some</span> <span class=\"token class-name\">View</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">ScrollViewReader</span> <span class=\"token punctuation\">{</span> proxy <span class=\"token keyword\">in</span>\n            <span class=\"token class-name\">List</span><span class=\"token punctuation\">(</span>viewModel<span class=\"token punctuation\">.</span>dataList<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> number <span class=\"token keyword\">in</span>\n                <span class=\"token class-name\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Message </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">number</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">padding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">.</span>onAppear <span class=\"token punctuation\">{</span>\n                proxy<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span>viewModel<span class=\"token punctuation\">.</span>dataList<span class=\"token punctuation\">.</span>last<span class=\"token punctuation\">,</span> anchor<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>bottom<span class=\"token punctuation\">)</span> <span class=\"token comment\">// show last row first</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ViewModel</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">ObservableObject</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attribute atrule\">@Published</span> <span class=\"token keyword\">var</span> dataList <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token operator\">..&lt;</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// initially, there are messages 15 - 30</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<br/>\n<h3>윗 방향 pagination 구현 코드</h3>\n<ul>\n<li>베이스 코드를 구현했으니 이제 윗 방향 pagination을 구현해본다.</li>\n<li>message 15까지 (= 최상단 row까지) 스크롤이 되면, 더 이상 보여줄 메세지가 그 위로 없으므로, 이 시점에 이전 메세지들을 불러와야한다.</li>\n<li>따라서 <code class=\"language-text\">List</code>의 row 중 message 15가 있는 row가 보일때 (= 최상단 row가 화면에 나타날때), 예전 메세지를 로딩해와야한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-swift line-numbers\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token class-name\">SwiftUI</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ContentView</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">View</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attribute atrule\">@StateObject</span> <span class=\"token keyword\">var</span> viewModel <span class=\"token operator\">=</span> <span class=\"token class-name\">ViewModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">var</span> body<span class=\"token punctuation\">:</span> <span class=\"token keyword\">some</span> <span class=\"token class-name\">View</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">ScrollViewReader</span> <span class=\"token punctuation\">{</span> proxy <span class=\"token keyword\">in</span>\n            <span class=\"token class-name\">List</span><span class=\"token punctuation\">(</span>viewModel<span class=\"token punctuation\">.</span>dataList<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> number <span class=\"token keyword\">in</span>\n                <span class=\"token class-name\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Message </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">number</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">padding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span>\n                    <span class=\"token comment\">// 최상단 row에 스크롤이 도달하면 loadPrevious 호출. </span>\n                    <span class=\"token punctuation\">.</span>onAppear <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">if</span> number <span class=\"token operator\">==</span> viewModel<span class=\"token punctuation\">.</span>dataList<span class=\"token punctuation\">.</span>first <span class=\"token punctuation\">{</span>\n                            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Message </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">number</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\"> appeared\"</span></span><span class=\"token punctuation\">)</span>\n                            viewModel<span class=\"token punctuation\">.</span><span class=\"token function\">loadPrevious</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">.</span>onAppear <span class=\"token punctuation\">{</span>\n                proxy<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span>viewModel<span class=\"token punctuation\">.</span>dataList<span class=\"token punctuation\">.</span>last<span class=\"token punctuation\">,</span> anchor<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>bottom<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ViewModel</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">ObservableObject</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attribute atrule\">@Published</span> <span class=\"token keyword\">var</span> dataList <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token operator\">..&lt;</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">var</span> hasPrevious <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    \n    <span class=\"token comment\">// 이전 메세지들을 로딩해오는 함수. </span>\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">loadPrevious</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> hasPrevious <span class=\"token punctuation\">{</span>\n            hasPrevious <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n            <span class=\"token keyword\">let</span> newData <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">..&lt;</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>dataList <span class=\"token operator\">=</span> newData <span class=\"token operator\">+</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>dataList\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>여기까지 구현하고 앱을 실행해서 List를 위로 스크롤해보자.</li>\n<li>이전 메세지들은 추가가 되고 있지만, UI상의 문제가 보인다.</li>\n<li>추가로 로딩된 메세지들이 순서대로 하나씩 보이지 않고, 중간 메세지들이 갑자기 스킵되고, message 0으로 스크롤이 점프되는 문제가 생긴다.</li>\n</ul>\n<video width=\"100%\" style=\"border-radius: 19px; overflow: hidden;\" controls>\n  <source src=\"/bf83626f6c12e55c6d9a6d5506e5351a/bug.mov\" type=\"video/mp4\">\n</video>\n<h2>스크롤 점프 문제 해결하기</h2>\n<ul>\n<li>스크롤 점프 문제를 해결하기 위해서는 이 코드를 추가하면 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-swift line-numbers\"><code class=\"language-swift\"><span class=\"token comment\">// ...</span>\n<span class=\"token class-name\">List</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span>of<span class=\"token punctuation\">:</span> viewModel<span class=\"token punctuation\">.</span>dataList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> oldValue<span class=\"token punctuation\">,</span> newValue <span class=\"token keyword\">in</span>\n        proxy<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span>oldValue<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">,</span> anchor<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>\n<p>스크롤이 message 0으로 점프되는 이유:</p>\n<ul>\n<li>message 15가 화면 꼭대기에 나타남 -> <code class=\"language-text\">loadPrevious()</code> 호출 -> <code class=\"language-text\">viewModel.dataList</code>가 업데이트 됨 -> List가 re-render 됨 -> List가 re-render 되면서 List의 최상단 row부터 보여짐</li>\n<li>즉, 데이터 업데이트에 의해서 List가 다시 그려지면서 기존에 message 15가 보이던 List의 scroll 위치가 유지되지 않고, List의 최상단 row (= message 0)가 화면에 나타난 것이다.</li>\n</ul>\n</li>\n<li>\n<p>우리가 원하는 동작은 화면 꼭대기에 보이던 message 15가 계속 화면 꼭대기에서 보이는 것이다.</p>\n</li>\n<li>\n<p>위 코드는 <code class=\"language-text\">viewModel.dataList</code>가 업데이트 될때, 기존 <code class=\"language-text\">viewModel.dataList</code>의 첫번째 data가 화면의 꼭대기에 위치하도록 List를 스크롤한다.</p>\n</li>\n</ul>\n<h2>Complete Code</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-swift line-numbers\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token class-name\">SwiftUI</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ContentView</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">View</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attribute atrule\">@StateObject</span> <span class=\"token keyword\">var</span> viewModel <span class=\"token operator\">=</span> <span class=\"token class-name\">ViewModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">var</span> body<span class=\"token punctuation\">:</span> <span class=\"token keyword\">some</span> <span class=\"token class-name\">View</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">ScrollViewReader</span> <span class=\"token punctuation\">{</span> proxy <span class=\"token keyword\">in</span>\n            <span class=\"token class-name\">List</span><span class=\"token punctuation\">(</span>viewModel<span class=\"token punctuation\">.</span>dataList<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> number <span class=\"token keyword\">in</span>\n                <span class=\"token class-name\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Message </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">number</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">padding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span>\n                    <span class=\"token comment\">// pagination for prepending previous data </span>\n                    <span class=\"token punctuation\">.</span>onAppear <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">if</span> number <span class=\"token operator\">==</span> viewModel<span class=\"token punctuation\">.</span>dataList<span class=\"token punctuation\">.</span>first <span class=\"token punctuation\">{</span>\n                            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Message </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">number</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\"> appeared\"</span></span><span class=\"token punctuation\">)</span>\n                            viewModel<span class=\"token punctuation\">.</span><span class=\"token function\">loadPrevious</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">.</span>onAppear <span class=\"token punctuation\">{</span>\n                proxy<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span>viewModel<span class=\"token punctuation\">.</span>dataList<span class=\"token punctuation\">.</span>last<span class=\"token punctuation\">,</span> anchor<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>bottom<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\">// prevent being scrolled to top row upon loading previous data </span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span>of<span class=\"token punctuation\">:</span> viewModel<span class=\"token punctuation\">.</span>dataList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> oldValue<span class=\"token punctuation\">,</span> newValue <span class=\"token keyword\">in</span>\n                proxy<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span>oldValue<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">,</span> anchor<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n            \n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ViewModel</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">ObservableObject</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attribute atrule\">@Published</span> <span class=\"token keyword\">var</span> dataList <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token operator\">..&lt;</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">var</span> hasPrevious <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    \n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">loadPrevious</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> hasPrevious <span class=\"token punctuation\">{</span>\n            hasPrevious <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n            <span class=\"token keyword\">let</span> newData <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">..&lt;</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>dataList <span class=\"token operator\">=</span> newData <span class=\"token operator\">+</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>dataList\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<video width=\"100%\" style=\"border-radius: 19px; overflow: hidden;\" controls>\n  <source src=\"/29249787367aa668713d5e80faf762d4/final.mov\" type=\"video/mp4\">\n</video>","frontmatter":{"title":"SwiftUI List의 윗 방향으로 pagination 추가 시 화면이 자동 스크롤 되는 문제","date":"Jul 31, 2024","intro":"SwiftUI List의 최상단 row 위로 pagination 구현하는 방법과, 이때 발생하는 스크롤 점프 문제 해결하기","tags":["SwiftUI"],"featuredImage":null}}},"pageContext":{"slug":"/blog/2024-06-30-swiftui-list-maintain-scroll-position-when-appending-to-top/2024-06-30-swiftui-list-maintain-scroll-position-when-appending-to-top/"}},"staticQueryHashes":["2626414135","3159585216"],"slicesMap":{}}