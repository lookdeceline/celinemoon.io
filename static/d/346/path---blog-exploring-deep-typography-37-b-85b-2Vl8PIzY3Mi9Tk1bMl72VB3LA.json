{"data":{"markdownRemark":{"html":"<h2>i. Motivation</h2>\n<p>My little brother writes his <a href=\"https://www.hohyeonmoon.com/\">developer's blog</a> in Korean. But often, he wrties certain terminologies in English.\nAn important part of a blog aesthetic is the font. While there are few hundreds of free English fonts, there aren't that many available in Korean.\nSo he had to spend hours finding the right Korean and English fonts that were available for free, but also look good enough together. </p>\n<p>Creating a new font is an absolute pita. Even more so for Asian characters that have more character numbers.\nKorean has 40 characters, and a Korean <em>word</em> is a combination of at least 2 characters.\nWith <a href=\"https://type.method.ac/\">kerning</a> included, the font design process requires hard manual work on each pixel. </p>\n<p>What if font styles could be transferred from one language to another? </p>\n<p>In search of <strong>a neural network that can properly create new fonts</strong>, this series will have three different posts: </p>\n<blockquote>\n<blockquote>\n<p><br/><strong>1.  Naive approach</strong>\n<br/>exploring font space with deep learning methods such as VGG16 and T-SNE. </p>\n<p><strong>2.  Advanced approach</strong>\n<br/>exploring font space with deep learning methods such as autoencoder, VAE, and GAN.</p>\n<p><strong>3.  Future works</strong>\n<br/>personal projects</p>\n<p><br/> ** <em>This post covers part 1. Parts 2, 3 are soon to be uploaded</em>.</p>\n</blockquote>\n</blockquote>\n<h2>Exploring font space using VGG16 &#x26; T-SNE</h2>\n<p>There have been two interesting projects that have attempted to </p>\n<blockquote>\n<blockquote>\n<p>i) visualize distribution of similar font types in clusters using VGG16 &#x26; T-SNE\n<br/>ii) create new fonts by training T-SNE  </p>\n</blockquote>\n</blockquote>\n<h2>ii. Visualizing font space</h2>\n<p>Two separate projects - one by Kevin Ho, another by Jack Qiao - have wondefully visualized various fonts on a high-dimensional plane.\nBoth projects leveraged VGG16 to extract feature vectors off font images. Then, both ran the extracted feature embeddings through T-SNE.</p>\n<blockquote>\n<blockquote>\n<h3>1) implementation steps</h3>\n</blockquote>\n</blockquote>\n<!-- \nseries into 3 parts - intro \n1. VGG\n2. feel the kern 무슨 nn?\n3. auto encoder\n4. vae, gan \n5. future 1 :  style transfer :  english fonts to korean  using cycle gan??? \n\tthen what is cycle gan ??? where is it used?\n\twhat other ways are there to trasfer style?\n6. future 2 : new fonts dataset -- only containing fonts with legit characters \n\t- google fonts\n\t- behance free fonts \n\t- ==> train with these fonts and see if the nn creates fonts that look like ones that arent free (ex. apercu)\n7. future 3:  \n-->","excerpt":"i. MotivationMy little brother writes his developer's blog in Korean. But often, he wrties certain terminologies in English. \nAn important part of a blog…","frontmatter":{"date":"03 January, 2020","path":"/blog/exploring-deep-typography","title":"Exploring Deep Typography"},"fields":{"readingTime":{"text":"3 min read"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}