{"version":3,"sources":["webpack:///./src/components/tagTile.js","webpack:///./src/components/styles/pagesTitle.module.css","webpack:///./src/blog/images/chevron-right-regular.svg","webpack:///./src/components/styles/tagTile.module.css","webpack:///./src/components/styles/smallThumbnailPost.module.css","webpack:///./src/components/smallThumbnailPost.js","webpack:///./src/components/tagsBar.js","webpack:///./src/blog/images/chevron-right.svg","webpack:///./src/blog/images/seePost2.svg","webpack:///./src/components/pagesTitle.js","webpack:///./src/styles/index.module.css","webpack:///./src/components/styles/smallTagBox.module.css","webpack:///./src/pages/blog.js","webpack:///./src/components/smallTagBox.js"],"names":["TagTile","tag","isSelected","console","log","textColor","fontWeight","to","fieldValue","className","styles","pillbox","style","color","module","exports","React","ChevronRightRegular","props","createElement","defaultProps","default","SmallThumbnailPost","node","frontmatter","path","key","id","cardItem","cardWrapper","cardContent","cardContentTitle","title","cardContentIntro","intro","smallTagsContainer","tags","map","index","chevronDiv","chevron","TagsBar","selectedTag","data","useStaticQuery","allMarkdownRemark","group","pillboxContainer","ChevronRight","SeePost2","PagesTitle","containerContainer","container","h1","h2","titleIntro","Blog","edges","postsSectionBackground","pageContainer","filter","publish","SmallTagBox"],"mappings":"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","file":"component---src-pages-blog-js-cb2dd3b63e43d60bf76b.js","sourcesContent":["import React from 'react'\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\n\nimport styles from \"./styles/tagTile.module.css\"\n\nconst TagTile = ({ tag, isSelected}) => {\n    console.log(\"^^ tagTile: \", tag, \"isSelected: \", isSelected)\n    // const backgroundColor = isSelected ? \"#F0F5F9\" : null\n    const textColor = isSelected ? \"#0061f2\" : null \n    const fontWeight = isSelected ? \"600\" : null\n\n    return (\n        <Link to={`/tags/${tag.fieldValue}`} \n        // className={styles.tile}\n        className={styles.pillbox}\n        style={{color: textColor, fontWeight: fontWeight}}>\n            {tag.fieldValue}\n        </Link>\n    )\n}\n\nexport default TagTile;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerContainer\":\"pagesTitle-module--containerContainer--2OUVa\",\"container\":\"pagesTitle-module--container--3MuUx\",\"h1\":\"pagesTitle-module--h1--uyrh-\",\"h2\":\"pagesTitle-module--h2--3C5Ry\"};","var React = require('react');\n\nfunction ChevronRightRegular (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M47.9746 42.7461C47.9746 42.1276 47.8525 41.5498 47.6084 41.0127C47.3643 40.4756 47.0143 39.9791 46.5586 39.5234L7.8867 1.63278C7.00777 0.786449 5.93354 0.363281 4.664 0.363281C3.8502 0.363281 3.1015 0.558588 2.4179 0.949188C1.7343 1.33985 1.1972 1.86882 0.806602 2.53609C0.416002 3.20342 0.220703 3.96025 0.220703 4.80659C0.220703 6.01105 0.643869 7.06902 1.4902 7.98048L37.0371 42.7461L1.4902 77.5117C0.643869 78.4232 0.220703 79.4811 0.220703 80.6855C0.220703 81.5319 0.416002 82.2887 0.806602 82.956C1.1972 83.6234 1.7343 84.1523 2.4179 84.543C3.1015 84.9336 3.8502 85.1289 4.664 85.1289C5.93354 85.1289 7.00777 84.6894 7.8867 83.8105L46.5586 45.9688C47.0143 45.5131 47.3643 45.0166 47.6084 44.4795C47.8525 43.9424 47.9746 43.3646 47.9746 42.7461Z\"}));\n}\n\nChevronRightRegular.defaultProps = {\"width\":\"48\",\"height\":\"86\",\"viewBox\":\"0 0 48 86\",\"fill\":\"none\"};\n\nmodule.exports = ChevronRightRegular;\n\nChevronRightRegular.default = ChevronRightRegular;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tile\":\"tagTile-module--tile--3SXpx\",\"pillbox\":\"tagTile-module--pillbox--2AWKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsContainer\":\"smallThumbnailPost-module--cardsContainer--1DWVB\",\"cardItem\":\"smallThumbnailPost-module--cardItem--3Qnxe\",\"chevron\":\"smallThumbnailPost-module--chevron--aI0zV\",\"blogpostImageContainer\":\"smallThumbnailPost-module--blogpostImageContainer--3j454\",\"image\":\"smallThumbnailPost-module--image--3nxsg\",\"cardWrapper\":\"smallThumbnailPost-module--cardWrapper--2sE9j\",\"cardContent\":\"smallThumbnailPost-module--cardContent--3wsQ6\",\"cardHeader\":\"smallThumbnailPost-module--cardHeader--2mW49\",\"cardContentDate\":\"smallThumbnailPost-module--cardContentDate--2X_qY\",\"cardContentTitle\":\"smallThumbnailPost-module--cardContentTitle--3aK7T\",\"cardContentIntro\":\"smallThumbnailPost-module--cardContentIntro--YZ4Tn\",\"tagsAndArrow\":\"smallThumbnailPost-module--tagsAndArrow--1ga7z\",\"chevronDiv\":\"smallThumbnailPost-module--chevronDiv--21Y1N\",\"appStore\":\"smallThumbnailPost-module--appStore--1u4nE\",\"smallTagsContainer\":\"smallThumbnailPost-module--smallTagsContainer--3Q0N2\"};","import React from 'react'\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport SmallTagBox from \"./smallTagBox\"\nimport styles from \"./styles/smallThumbnailPost.module.css\"\nimport ChevronIcon from \"../blog/images/chevron-right.svg\"\nimport SeePostIcon from \"../blog/images/seePost2.svg\"\nimport ChevronRegularIcon from \"../blog/images/chevron-right-regular.svg\"\n\nconst SmallThumbnailPost = ({ node }) => {\n    return (\n        <Link to={`/blog/${node.frontmatter.path}`} \n            key={node.id} \n            className={styles.cardItem}>\n            {/* <div key={node.id} className={styles.cardItem}> */}\n            \n            <div className={styles.cardWrapper}>\n              <div className={styles.cardContent}>\n\n                <div className={styles.cardContentTitle}>\n                  {node.frontmatter.title}\n                </div>\n\n                <div className={styles.cardContentIntro}>\n                    {node.frontmatter.intro}\n                </div>\n\n               {/* <div className={styles.tagsAndArrow}> */}\n                <div className={styles.smallTagsContainer}>\n                    {node.frontmatter.tags ? node.frontmatter.tags.map(( tag, index ) => {\n                        return (\n                            <SmallTagBox tag={tag} />\n                        )\n                    }) \n                    : null\n                    }\n                </div>\n\n                {/* <SeePostIcon className={styles.chevron}/> */}\n               {/* </div>  */}\n              </div>\n              <div className={styles.chevronDiv}>\n                <SeePostIcon className={styles.chevron}/>\n              </div>\n\n             \n              \n              \n            </div>\n\n          \n        {/* </div> */}\n        </Link>\n    )\n}\n\n\nexport default SmallThumbnailPost;\n\n\n\n\n// export const query = graphql`\n//   query {\n//     allMarkdownRemark(sort: \n//         { fields: [frontmatter___date], order: DESC },\n//         filter: {fileAbsolutePath: {regex: \"/(blog)/.*.md$/\"}}\n//         ) {\n//       totalCount\n//       edges {\n//         node {\n//           id\n//           frontmatter {\n//             title\n//             date(formatString: \"YYYY. MM. DD.\")\n//             intro\n//             featuredImage {\n//               childImageSharp {\n//                 fluid(maxWidth: 800) {\n//                   ...GatsbyImageSharpFluid\n//                 }\n//               }\n//             }\n//             backgroundColor\n//             tags\n//           }\n//           fields {\n//             slug\n//           }\n//         }\n//       }\n//     }\n//   }\n// `","\nimport React from \"react\"\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\n\nimport TagTile from \"../components/tagTile\"\nimport styles from \"../styles/index.module.css\"\n\n// console.log(styles)\n\n// const Post = props => (\n//     <div className={styles.post}>\n//       <img src={props.thumbnail} className={styles.thumbnail} alt=\"\" />\n//       <div className={styles.description}>\n//         <h2 className={styles.title}>{props.title}</h2>\n//         <p className={styles.excerpt}>{props.excerpt}</p>\n//       </div>\n//     </div>\n//   )\n\n\nexport default function TagsBar({ selectedTag }) {\n\n    const data = useStaticQuery (\n    graphql`\n        query {\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC },\n            filter: {\n            fileAbsolutePath: {regex: \"/(blog)/.*.md$/\"}\n            frontmatter: {\n                publish: { eq: true }\n            }\n            }\n            ) {\n            group(field: frontmatter___tags) {\n            fieldValue\n            totalCount\n            edges {\n                node {\n                frontmatter {\n                    publish\n                    path\n                }\n                }\n            }\n            }\n            }\n        }\n        `\n    )\nconsole.log(\"$$ data: \", data)\n  let tags = data.allMarkdownRemark.group\n  \n  console.log(\"$$ selectedTag: \", selectedTag)\n    return (\n      <div>\n        {/* <Header/> */}\n        {/* <SEO title = \"Dev Blog\"/> */}\n\n              {/* tags */}\n\n              {/* rectangle tiles */}\n              {/* <div className={styles.tagTilesSection}>\n                <div className={styles.tagTilesContainer}>\n                  {tags\n                  .map( tag  => (\n                    <TagTile tag={tag} isSelected={tag.fieldValue===selectedTag}/>\n                  ))}\n                </div>\n              </div> */}\n\n              {/* simpler rounder pillbox tiles */}\n                <div className={styles.pillboxContainer}>\n                  {tags\n                  .map( tag  => (\n                    <TagTile tag={tag} isSelected={tag.fieldValue===selectedTag}/>\n                  ))}\n                </div>\n        {/* <Footer/> */}\n      </div>\n    )\n  }\n\n\n// export const query = graphql`\n// query {\n//   allMarkdownRemark(\n//     sort: { fields: [frontmatter___date], order: DESC },\n//     filter: {\n//       fileAbsolutePath: {regex: \"/(blog)/.*.md$/\"}\n//       frontmatter: {\n//         publish: { eq: true }\n//       }\n//     }\n//     ) {\n//     group(field: frontmatter___tags) {\n//       fieldValue\n//       totalCount\n//       edges {\n//         node {\n//           frontmatter {\n//             publish\n//             path\n//           }\n//         }\n//       }\n//     }\n//     }\n// }\n// `","var React = require('react');\n\nfunction ChevronRight (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M58.1972 51.7442C58.1972 51.1583 58.0996 50.6456 57.9043 50.2061C57.709 49.7666 57.3997 49.3516 56.9765 48.961L6.43943 1.50008C5.72329 0.783884 4.84439 0.425781 3.80272 0.425781C3.11912 0.425781 2.50063 0.58042 1.94723 0.889687C1.39389 1.19895 0.954459 1.63025 0.628925 2.18359C0.303392 2.73699 0.140625 3.35549 0.140625 4.03909C0.140625 5.01569 0.482425 5.86205 1.16603 6.57819L49.2617 51.7442L1.16603 96.8614C0.482425 97.5775 0.140625 98.4238 0.140625 99.4004C0.140625 100.117 0.303392 100.751 0.628925 101.305C0.954459 101.858 1.39389 102.289 1.94723 102.599C2.50063 102.908 3.11912 103.063 3.80272 103.063C4.84439 103.063 5.72329 102.704 6.43943 101.988L56.9765 54.5274C57.3997 54.1368 57.709 53.7136 57.9043 53.2579C58.0996 52.8022 58.1972 52.2976 58.1972 51.7442Z\"}));\n}\n\nChevronRight.defaultProps = {\"width\":\"59\",\"height\":\"104\",\"viewBox\":\"0 0 59 104\",\"fill\":\"none\"};\n\nmodule.exports = ChevronRight;\n\nChevronRight.default = ChevronRight;\n","var React = require('react');\n\nfunction SeePost2 (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M33 1L43 11M43 11L33 21M43 11H0\",\"strokeWidth\":\"2\"}));\n}\n\nSeePost2.defaultProps = {\"width\":\"45\",\"height\":\"22\",\"viewBox\":\"0 0 45 22\"};\n\nmodule.exports = SeePost2;\n\nSeePost2.default = SeePost2;\n","import React from 'react'\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport styles from \"./styles/pagesTitle.module.css\"\n\nconst PagesTitle = (props) => {\n    return (\n        <div className={styles.containerContainer}>\n            <div className={styles.container}>\n                <h1 className={styles.h1}>{ props.title }</h1>\n                <h2 className={styles.h2}>{ props.titleIntro }</h2>\n            </div>\n        </div>\n    )\n}\n\n\nexport default PagesTitle;\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"abountContainerContainer\":\"index-module--abountContainerContainer--MEmbC\",\"aboutContainer\":\"index-module--aboutContainer--3VZZ2\",\"aboutTextContainer\":\"index-module--aboutTextContainer--1E1lL\",\"intro\":\"index-module--intro--1svyt\",\"introLinks\":\"index-module--introLinks--3jWno\",\"pageLink\":\"index-module--pageLink--3rYFP\",\"cvLink\":\"index-module--cvLink--1q-Wh\",\"subSectionTitle\":\"index-module--subSectionTitle--37uux\",\"profileImage\":\"index-module--profileImage--1Cd9z\",\"body\":\"index-module--body--AmiUw\",\"blogSection\":\"index-module--blogSection--2Kq68\",\"projectSection\":\"index-module--projectSection--3fVtW\",\"cardsContainer\":\"index-module--cardsContainer--Njzax\",\"cardItem\":\"index-module--cardItem--3Qdx5\",\"cardContentTitle\":\"index-module--cardContentTitle--3tPVC\",\"image\":\"index-module--image--LHmLZ\",\"imageContainer\":\"index-module--imageContainer--Prvoh\",\"blogpostImageContainer\":\"index-module--blogpostImageContainer--1pdxp\",\"cardContent\":\"index-module--cardContent--bxX4J\",\"cardContentDate\":\"index-module--cardContentDate--292vG\",\"cardContentIntro\":\"index-module--cardContentIntro--1e_vM\",\"appStore\":\"index-module--appStore--2w3kP\",\"smallTagsContainer\":\"index-module--smallTagsContainer--1ZUDD\",\"projectsPageCardsContainer\":\"index-module--projectsPageCardsContainer--22t3S\",\"background\":\"index-module--background--6CJ6G\",\"tagTilesSection\":\"index-module--tagTilesSection--2Tktp\",\"tagTilesContainer\":\"index-module--tagTilesContainer--K8bIY\",\"pillboxContainer\":\"index-module--pillboxContainer--1i8r1\",\"pageContainer\":\"index-module--pageContainer--3H4Su\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"smallTagBox-module--tag--43eY2\"};","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/layout\"\nimport Header from \"../components/header\"\nimport Footer from \"../components/footer\"\nimport SEO from \"../components/seo\"\nimport PagesTitle from \"../components/pagesTitle\"\nimport SmallThumbnailPost from \"../components/smallThumbnailPost\"\nimport TagTile from \"../components/tagTile\"\nimport TagsBar from \"../components/tagsBar\"\nimport styles from \"../styles/index.module.css\"\n\n// console.log(styles)\n\n// const Post = props => (\n//     <div className={styles.post}>\n//       <img src={props.thumbnail} className={styles.thumbnail} alt=\"\" />\n//       <div className={styles.description}>\n//         <h2 className={styles.title}>{props.title}</h2>\n//         <p className={styles.excerpt}>{props.excerpt}</p>\n//       </div>\n//     </div>\n//   )\n\n\nexport default function Blog({ data }) {\n  let tags = data.allMarkdownRemark.group\n  \n  console.log(\"### nodes: \", data.allMarkdownRemark.edges)\n    return (\n      // <Layout>\n      <div>\n        <Header/>\n        <SEO title = \"Dev Blog\"/>\n        {/* <div className={styles.pageContainer}> */}\n\n          <PagesTitle \n          title=\"Dev Blog\" \n          titleIntro=\"I mostly write about iOS development.\"\n          />\n\n              {/* tags */}\n              {/* <div className={styles.tagTilesSection}>\n                <div className={styles.tagTilesContainer}>\n                  {tags\n                  .map( tag  => (\n                    <TagTile tag={tag}/>\n                  ))}\n                </div>\n              </div> */}\n              <TagsBar/>\n\n              {/* posts section */}\n              <div className={styles.postsSectionBackground}>\n                <div className={styles.pageContainer}>  \n                    {data.allMarkdownRemark.edges\n                    .filter(({node}) => node.frontmatter.publish)\n                    .map(({ node }) => (\n                      <SmallThumbnailPost node={node}/>     \n                    ))}\n                </div>\n              </div>\n            \n        <Footer/>\n      </div>\n    )\n  }\n\n\nexport const query = graphql`\nquery {\n  allMarkdownRemark(\n    sort: { fields: [frontmatter___date], order: DESC },\n    filter: {\n      fileAbsolutePath: {regex: \"/(blog)/.*.md$/\"}\n      frontmatter: {\n        publish: { eq: true }\n      }\n    }\n    ) {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          date(formatString: \"YYYY. MM. DD.\")\n          intro\n          featuredImage {\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          tags\n          path\n          publish\n        }\n        fields {\n          slug\n        }\n      }\n    }\n\n    group(field: frontmatter___tags) {\n      fieldValue\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            publish\n            path\n          }\n        }\n      }\n    }\n  }\n}\n`","import React from 'react'\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\n\nimport styles from \"./styles/smallTagBox.module.css\"\n\nconst SmallTagBox = (props) => {\n    return (\n        <div className={styles.tag}>{props.tag}</div>\n    )\n}\n\n\nexport default SmallTagBox;"],"sourceRoot":""}