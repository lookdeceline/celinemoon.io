{"version":3,"sources":["webpack:///./src/components/landing-recent-blog.js","webpack:///./src/components/landing-bio.js","webpack:///./src/pages/index.js"],"names":["SectionTitle","Expand","Link","Content","MarkerHeader","SinglePost","IndexPage","data","style","marginBottom","display","alignItems","to","allMarkdownRemark","edges","map","node","key","id","frontmatter","path","css","title","description","Container","OuterContainer","Description","NameHeader","propTypes","siteTitle","PropTypes","string","defaultProps","LandingBio","query","render","keywords"],"mappings":"0OAWMA,EAAY,mIAKZC,EAAS,YAAOC,OAAP,qBAAH,+LAaNC,EAAO,0HAMPC,EAAY,oIAkBZC,GAZW,kHAMA,kHAMD,gI,+DA0CDC,EAjCG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,uBACE,YAACJ,EAAD,KACE,mBAAKK,MAAO,CAAEC,aAAc,GAAIC,QAAS,OAAQC,WAAY,WAC3D,YAACX,EAAD,qBACA,YAACC,EAAD,CAAQW,GAAG,SAAX,aAEDL,EAAKM,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,YAACX,EAAD,CAAYY,IAAKD,EAAKE,IACpB,uBAEE,YAAC,OAAD,CACEN,GAAII,EAAKG,YAAYC,KACrBC,IAAG,GAOH,YAACjB,EAAD,KAAeY,EAAKG,YAAYG,MAAhC,KACA,uBAAMN,EAAKG,YAAYI,sB,iCC9EjCC,EAAS,oFAITC,EAAc,yJASdC,EAAW,iKAQXC,EAAU,uIA8BhBA,EAAWC,UAAY,CACrBC,UAAWC,IAAUC,QAGvBJ,EAAWK,aAAe,CACxBH,UAAU,IAGGI,MA/BI,kBACjB,YAAC,cAAD,CACEC,MAAK,YASLC,OAAQ,SAAA5B,GAAI,OACV,YAACkB,EAAD,KACE,YAACD,EAAD,KAEE,YAACG,EAAD,sBACA,YAACD,EAAD,wBAfR,UCNWQ,GAHE5B,UAVG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKe,MAAM,eAAec,SAAU,CAAC,SAAD,yBACpC,YAAC,EAAD,MACA,YAAC,EAAD,CAAe7B,KAAMA,MAQT,e","file":"component---src-pages-index-js-6f2f026f7d3fc51b536a.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\nimport './global.css'\n\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\n// import Img from 'gatsby-image';\n\nconst SectionTitle = styled.span`\n  font-family: 'DM Sans', sans-serif;\n  font-size: 2em;\n  font-weight: 500;\n`\nconst Expand = styled(Link)`\n  font-family: 'DM Sans', sans-serif;\n  font-weight: 700;\n  margin-left: 5vw;\n  padding: 3px 14px;\n  border-radius: 15px;\n  background: #e3f4e5;\n  text-decoration: none;\n  \n  :hover {\n    color: #fd163f;\n  }\n`\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  font-family: 'DM Sans', sans-serif;\n  margin-bottom: 10px;\n  `\n\nconst ArticleDate = styled.h5`\n  display: inline;\n  color: #fb2811;\n  margin-bottom: 10px;\n`\n\nconst ReadingTime = styled.h5`\n  display: inline;\n  color: #fb2811;\n  margin-bottom: 10px;\n`\n\nconst SinglePost = styled.section`\n  padding: 13px 0;\n  :hover{\n    // background-color: #1875d1;\n    color: #0E51EC;\n    border-radius: 20px;\n  }\n`;\n\nconst IndexPage = ({ data }) => {\n  return (\n    <div>\n      <Content>\n        <div style={{ marginBottom: 20, display: 'flex', alignItems: 'center'}}>\n          <SectionTitle>Latest Posts</SectionTitle>\n          <Expand to=\"/blog\">View All</Expand>\n        </div>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <SinglePost key={node.id}>\n            <div>\n              {/* // <div key={node.id}> */}\n              <Link\n                to={node.frontmatter.path}\n                css={css`\n                  text-decoration: none;\n                  color: inherit;\n                `}\n              >\n                {/* {node.frontmatter.image.childImageSharp.fluid} */}\n                {/* <div>{node.frontmatter.image}</div> */}\n                <MarkerHeader>{node.frontmatter.title} </MarkerHeader>\n                <div>{node.frontmatter.description}</div>\n                {/* <div><Img fluid={node.frontmatter.thumbnail.childImageSharp}/></div> */}\n              </Link>\n            </div>\n          </SinglePost>\n        ))}\n      </Content>\n    </div>\n  )\n}\n\nexport default IndexPage\n\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport './global.css'\n\nconst Container = styled.div`\n  text-align: center;\n`\n\nconst OuterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  // height: 78vh;\n  height: 50vh;\n`\n\nconst Description = styled.p`\n  font-family: 'DM Sans', sans-serif;\n  padding: 0;\n  margin-bottom: 1rem;\n  font-size: 1.4rem;\n  text-align: center;\n`\n\nconst NameHeader = styled.h1`\n  // font-size: 3.5rem;\n  font-family: 'DM Sans', sans-serif;\n  font-size: 4.3rem;\n  margin-bottom: 10px;\n`\n\nconst LandingBio = () => (\n  <StaticQuery\n    query={graphql`\n      query LandingSiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <OuterContainer>\n        <Container>\n          {/*<NameHeader>{data.site.siteMetadata.title}</NameHeader>*/}\n          <NameHeader>Jeongwon Moon</NameHeader>\n          <Description>lookdeceline</Description>\n        </Container>\n      </OuterContainer>\n    )}\n  />\n)\n\nNameHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nNameHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default LandingBio\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport LandingRecent from '../components/landing-recent-blog'\nimport LandingBio from \"../components/landing-bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n// const IndexPage = () => (\n//   <Layout>\n//     <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n//     <LandingBio />\n//     {/*<Blog />*/}\n//   </Layout>\n// )\n\nconst IndexPage = ({ data }) => {\n  return(\n    <Layout>\n      <SEO title=\"lookdeceline\" keywords={[`gatsby`, `application`, `react`]} />\n      <LandingBio />\n      <LandingRecent data={data} />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { eq: false } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            path\n            description\n\n          }\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}