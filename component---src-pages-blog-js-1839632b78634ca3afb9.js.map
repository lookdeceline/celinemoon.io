{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Content","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","ArticleDate","MarkerHeader","ReadingTime","SinglePost","IndexPage","_ref2","data","console","log","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","title","allMarkdownRemark","edges","map","_ref3","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","frontmatter","path","css","_ref","date","fields","readingTime","text","description","query","StaticQueryContext","React","createContext","StaticQuery","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","SEO","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","array","arrayOf","styled_base_browser_esm","NavLink","Link","GitHubLink","HomeLink","SiteHeader","Header","siteTitle","core_browser_esm","href","GatsbyLink","Footer","Layout","gatsby_browser_entry","react_default","Fragment","header","layout_Content","Date","getFullYear","_755544856"],"mappings":"2LASMA,EAAUC,OAAAC,EAAA,EAAAD,CAAA,OAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,SAAAC,OAAA,6DAMPC,EAAcL,OAAAC,EAAA,EAAAD,CAAA,MAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,qDAQXE,EAAeN,OAAAC,EAAA,EAAAD,CAAA,MAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,uCAkBZG,EAAcP,OAAAC,EAAA,EAAAD,CAAA,MAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,qDAQXI,EAAaR,OAAAC,EAAA,EAAAD,CAAA,WAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,gIAyCDK,UAnCG,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAEnB,OADAC,QAAQC,IAAIF,GAEVX,OAAAc,EAAA,EAAAd,CAACe,EAAA,EAAD,KACEf,OAAAc,EAAA,EAAAd,CAACgB,EAAA,EAAD,CAAKC,MAAM,SACXjB,OAAAc,EAAA,EAAAd,CAACD,EAAD,KACEC,OAAAc,EAAA,EAAAd,CAAA,kBACCW,EAAKO,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChCtB,OAAAc,EAAA,EAAAd,CAACQ,EAAD,KACER,OAAAc,EAAA,EAAAd,CAAA,OAAKuB,IAAKD,EAAKE,IAEbxB,OAAAc,EAAA,EAAAd,CAACyB,EAAA,EAAD,CACEC,GAAIJ,EAAKK,YAAYC,KACrBC,IAAGC,GAOH9B,OAAAc,EAAA,EAAAd,CAACM,EAAD,KAAegB,EAAKK,YAAYV,MAAhC,KACAjB,OAAAc,EAAA,EAAAd,CAAA,WACEA,OAAAc,EAAA,EAAAd,CAACK,EAAD,KAAciB,EAAKK,YAAYI,MAC/B/B,OAAAc,EAAA,EAAAd,CAACO,EAAD,WAAiBe,EAAKU,OAAOC,YAAYC,OAE3ClC,OAAAc,EAAA,EAAAd,CAAA,WAAMsB,EAAKK,YAAYQ,qBAYhC,IAAMC,EAAK,wLC/EZC,EAAqBC,IAAMC,cAAc,IAEzCC,EAAc,SAAAC,GAAK,OACvBzC,OAAA0C,EAAA,EAAA1C,CAACqC,EAAmBM,SAApB,KACG,SAAAC,GACC,OACEH,EAAM9B,MACLiC,EAAgBH,EAAML,QAAUQ,EAAgBH,EAAML,OAAOzB,MAEtD8B,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAM9B,KAAO8B,EAAM9B,KAAKA,KAAOiC,EAAgBH,EAAML,OAAOzB,MAGvDX,OAAA0C,EAAA,EAAA1C,CAAA,uCA4BfwC,EAAYO,UAAY,CACtBpC,KAAMqC,IAAUC,OAChBb,MAAOY,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,2BC1DtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,kLCMzCK,EAAmB,SAAA5B,GAAkB,IAAf6B,EAAe7B,EAAf6B,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEtB,IAAM0B,cAAcC,IAApBjE,OAAAkE,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXT,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,2GCbf,SAASW,EAATvC,GAA2D,IAA5CK,EAA4CL,EAA5CK,YAAamC,EAA+BxC,EAA/BwC,KAAMC,EAAyBzC,EAAzByC,KAAMC,EAAmB1C,EAAnB0C,SAAUvD,EAASa,EAATb,MACxCwD,EADiDC,EAAA/D,KACjD8D,KAcFE,EAAkBxC,GAAesC,EAAKG,aAAazC,YAEzD,OACEnC,OAAA0C,EAAA,EAAA1C,CAAC6E,EAAAC,EAAD,CACEC,eAAgB,CACdT,QAEFrD,MAAOA,EACP+D,cAAa,QAAUP,EAAKG,aAAa3D,MACzCsD,KAAM,CACJ,CACEpE,KAAI,cACJ8E,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAShE,GAEX,CACEiE,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACE9E,KAAI,eACJ8E,QAAO,WAET,CACE9E,KAAI,kBACJ8E,QAASR,EAAKG,aAAaO,QAE7B,CACEhF,KAAI,gBACJ8E,QAAShE,GAEX,CACEd,KAAI,sBACJ8E,QAASN,IAGVS,OACCZ,EAASa,OAAS,EACd,CACElF,KAAI,WACJ8E,QAAST,EAASc,KAAT,OAEX,IAELF,OAAOb,KAKhBF,EAAIkB,aAAe,CACjBjB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZH,EAAItB,UAAY,CACdZ,YAAaa,IAAUE,OACvBoB,KAAMtB,IAAUE,OAChBqB,KAAMvB,IAAUwC,MAChBhB,SAAUxB,IAAUyC,QAAQzC,IAAUE,QACtCjC,MAAO+B,IAAUE,OAAOC,YAGXkB,uPC5FTtE,EAAUC,OAAA0F,EAAA,EAAA1F,CAAA,OAAHE,OAAA,YAAGF,CAAH,CAAAG,KAAA,SAAAC,OAAA,4EAMPuF,EAAU3F,OAAA0F,EAAA,EAAA1F,CAAO4F,IAAP,CAAA1F,OAAA,YAAAF,CAAH,CAAAG,KAAA,UAAAC,OAAA,mXA0BPyF,EAAa7F,OAAA0F,EAAA,EAAA1F,CAAA,KAAHE,OAAA,YAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,mXA0BV0F,EAAW9F,OAAA0F,EAAA,EAAA1F,CAAO2F,EAAP,CAAAzF,OAAA,YAAAF,CAAH,CAAAG,KAAA,SAAAC,OAAA,mBAIR2F,EAAa/F,OAAA0F,EAAA,EAAA1F,CAAA,UAAHE,OAAA,YAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,qFAOV4F,EAAS,SAAAlE,GAAA,IAAGmE,EAAHnE,EAAGmE,UAAH,OACbjG,OAAAkG,EAAA,EAAAlG,CAAC+F,EAAD,KACE/F,OAAAkG,EAAA,EAAAlG,CAACD,EAAD,KACEC,OAAAkG,EAAA,EAAAlG,CAAA,SACEA,OAAAkG,EAAA,EAAAlG,CAAC8F,EAAD,CAAUpE,GAAG,KAAKuE,GAClBjG,OAAAkG,EAAA,EAAAlG,CAAC2F,EAAD,CAASjE,GAAG,SAAZ,QACA1B,OAAAkG,EAAA,EAAAlG,CAAC6F,EAAD,CAAYM,KAAK,mCAAjB,cAMRH,EAAOjD,UAAY,CACjBkD,UAAWjD,IAAUE,QAGvB8C,EAAOT,aAAe,CACpBU,UAAS,IAGID,QC/ETjG,UAAUC,OAAA0F,EAAA,EAAA1F,CAAA,OAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,2EAOPgG,EAAapG,OAAA0F,EAAA,EAAA1F,CAAA,KAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,SAAAC,OAAA,qBAIViG,EAASrG,OAAA0F,EAAA,EAAA1F,CAAA,UAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,yCAKNkG,EAAS,SAAAxE,GAAA,IAAGgB,EAAHhB,EAAGgB,SAAH,OACb9C,OAAAkG,EAAA,EAAAlG,CAACuG,EAAA,EAAD,CACEnE,MAAK,YASLS,OAAQ,SAAAlC,GAAI,OACVX,OAAAkG,EAAA,EAAAlG,CAAAwG,EAAA1B,EAAA2B,SAAA,KACEzG,OAAAkG,EAAA,EAAAlG,CAAC0G,EAAD,CAAQT,UAAWtF,EAAK8D,KAAKG,aAAa3D,QAC1CjB,OAAAkG,EAAA,EAAAlG,CAAC2G,EAAD,KACE3G,OAAAkG,EAAA,EAAAlG,CAAA,YAAO8C,GACP9C,OAAAkG,EAAA,EAAAlG,CAACqG,EAAD,WACK,IAAIO,MAAOC,cADhB,mBAGE7G,OAAAkG,EAAA,EAAAlG,CAACoG,EAAD,CAAYD,KAAK,4BAAjB,cAlBVxF,KAAAmG,KA0BFR,EAAOvD,UAAY,CACjBD,SAAUE,IAAU1B,KAAK6B,YAGZmD","file":"component---src-pages-blog-js-1839632b78634ca3afb9.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n// import Img from 'gatsby-image';\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst ArticleDate = styled.h5`\n  display: inline;\n  // color: #606060;\n  // color: #063268;\n  color: #c42a00;\n  margin-bottom: 10px;\n`\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  // border-radius: 1em 0 1em 0;\n  margin-bottom: 10px;\n  // background-image: linear-gradient(\n  //   -100deg,\n  //   rgba(255, 250, 150, 0.15),\n  //   rgba(255, 250, 150, 0.8) 100%,\n  //   rgba(255, 250, 150, 0.25)\n  // );\n\n  // background-color: rgba(92, 187, 254, 0.45);\n  // height: 3px;\n  // background-color: rgba(216, 123, 73, 0.5);\n  // padding-right: 9px;\n  // padding-left: 7px;\n  `\n\nconst ReadingTime = styled.h5`\n  display: inline;\n  // color: #606060;\n  // color: #063268;\n  color: #c42a00;\n  margin-bottom: 10px;\n`\n\nconst SinglePost = styled.section`\n  padding: 0.3em 0em 0.3em 0.7em;\n  border-left: 3px solid #4c85ba;\n  // border-radius: 0.4em 0.4em 0.4em 0.4em;\n`;\n\nconst IndexPage = ({ data }) => {\n  console.log(data)\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Content>\n        <h1>Blog</h1>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <SinglePost>\n            <div key={node.id}>\n            {/* // <div key={node.id}> */}\n              <Link\n                to={node.frontmatter.path}\n                css={css`\n                  text-decoration: none;\n                  color: inherit;\n                `}\n              >\n                {/* {node.frontmatter.image.childImageSharp.fluid} */}\n                {/* <div>{node.frontmatter.image}</div> */}\n                <MarkerHeader>{node.frontmatter.title} </MarkerHeader>\n                <div>\n                  <ArticleDate>{node.frontmatter.date}</ArticleDate>\n                  <ReadingTime> - {node.fields.readingTime.text}</ReadingTime>\n                </div>\n                <div>{node.frontmatter.description}</div>\n              </Link>\n            </div>\n          </SinglePost>\n        ))}\n      </Content>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount  \n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            path\n            description\n          }\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Content = styled.div`\n  max-width: 860px;\n  padding: 2rem 1.0875rem 1rem 1.0875rem;\n  font-size: 1.4rem;\n`\n\nconst NavLink = styled(Link)`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst GitHubLink = styled.a`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst HomeLink = styled(NavLink)`\n  margin-left: 0;\n`\n\nconst SiteHeader = styled.header`\n  background: transparent;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n`\n\nconst Header = ({ siteTitle }) => (\n  <SiteHeader>\n    <Content>\n      <p>\n        <HomeLink to=\"/\">{siteTitle}</HomeLink>\n        <NavLink to=\"/blog\">Blog</NavLink>\n        <GitHubLink href=\"https://github.com/lookdeceline\">GitHub</GitHubLink>\n      </p>\n    </Content>\n  </SiteHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 0 1.0875rem 1rem;\n  padding-top: 0;\n`\n\nconst GatsbyLink = styled.a`\n  margin-left: 5px;\n`\n\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: center;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Content>\n          <main>{children}</main>\n          <Footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <GatsbyLink href=\"https://www.gatsbyjs.org\">Gatsby</GatsbyLink>\n          </Footer>\n        </Content>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}