{"version":3,"sources":["webpack:///./src/images/research.svg","webpack:///./src/components/icon-note.js","webpack:///./src/pages/index.js","webpack:///./src/components/styles/smallThumbnailPost.module.css","webpack:///./src/components/smallThumbnailPost.js","webpack:///./src/components/styles/icon-note.module.css","webpack:///./src/images/checkmark.svg","webpack:///./src/styles/index.module.css","webpack:///./src/components/styles/smallTagBox.module.css","webpack:///./src/components/smallTagBox.js"],"names":["React","Research","props","createElement","defaultProps","module","exports","default","IconText","iconSize","styles","iconSmall","textSize","textSmall","size","iconMedium","textMedium","icon","className","type","container","text","Home","data","projectList","allMarkdownRemark","edges","filter","edge","node","fields","slug","indexOf","blogList","profilePic","allFile","nodes","childImageSharp","fluid","originalName","title","about","subSectionTitle","intro","profileImage","body","projectSection","cardsContainer","map","to","frontmatter","path","key","id","cardItem","style","backgroundColor","imageContainer","image","featuredImage","cardContent","cardContentTitle","cardContentIntro","blogSection","SmallThumbnailPost","smallTagsContainer","tags","tag","index","Checkmark","SmallTagBox"],"mappings":"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","file":"component---src-pages-index-js-c68ed0c266e615796de9.js","sourcesContent":["var React = require('react');\n\nfunction Research (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M2.12913 12.1197H5.6231C5.13858 11.5942 4.83149 10.8982 4.79055 10.1407H2.44305C2.10184 10.1407 1.97901 9.99055 1.97901 9.67664V2.44305C1.97901 2.12914 2.10184 1.97901 2.44305 1.97901H7.6021C7.94331 1.97901 8.06614 2.12914 8.06614 2.44305V6.85827C8.82362 6.8924 9.51969 7.19948 10.0451 7.68399V2.12914C10.0451 0.791606 9.25355 0 7.916 0H2.12913C0.791603 0 0 0.791606 0 2.12914V9.99056C0 11.3281 0.791603 12.1197 2.12913 12.1197ZM3.4189 4.13544H6.63308C6.85145 4.13544 7.01522 3.96484 7.01522 3.74646C7.01522 3.53491 6.85145 3.37113 6.63308 3.37113H3.4189C3.1937 3.37113 3.02992 3.53491 3.02992 3.74646C3.02992 3.96484 3.1937 4.13544 3.4189 4.13544ZM3.4189 5.77323H6.63308C6.85145 5.77323 7.01522 5.60262 7.01522 5.38425C7.01522 5.17271 6.85145 5.00893 6.63308 5.00893H3.4189C3.1937 5.00893 3.02992 5.17271 3.02992 5.38425C3.02992 5.60262 3.1937 5.77323 3.4189 5.77323ZM7.92966 12.1197C8.23675 12.1197 8.53019 12.0514 8.79633 11.9354L9.66298 12.7953C9.80629 12.9318 9.99055 13 10.1816 13C10.5842 13 10.8913 12.6929 10.8913 12.2835C10.8913 12.0992 10.8367 11.9218 10.6866 11.7717L9.84042 10.9255C9.9769 10.6457 10.052 10.3318 10.052 9.99738C10.052 8.8441 9.1034 7.88189 7.92966 7.88189C6.77638 7.88189 5.81417 8.8441 5.81417 9.99738C5.81417 11.1643 6.77638 12.1197 7.92966 12.1197ZM7.92966 11.0756C7.33596 11.0756 6.85145 10.6047 6.85145 9.99738C6.85145 9.40368 7.33596 8.92598 7.92966 8.92598C8.53018 8.92598 9.00788 9.40368 9.00788 9.99738C9.00788 10.6047 8.53018 11.0756 7.92966 11.0756Z\",\"fill\":\"#0B70CA\"}));\n}\n\nResearch.defaultProps = {\"width\":\"11\",\"height\":\"13\",\"viewBox\":\"0 0 11 13\",\"fill\":\"none\"};\n\nmodule.exports = Research;\n\nResearch.default = Research;\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport styled from \"styled-components\"\n\nimport CheckmarkIcon from \"../images/checkmark.svg\"   \nimport ResearchIcon from \"../images/research.svg\"   \nimport styles from \"./styles/icon-note.module.css\"\n\nconst IconText = (props) => {\n    // props: type, text, size \n\n    // Determine icon & text size.\n    let iconSize = styles.iconSmall\n    let textSize = styles.textSmall\n    if (props.size === \"medium\") {\n        iconSize = styles.iconMedium\n        textSize = styles.textMedium\n    }\n\n    // Determine icon type.\n    let icon = <CheckmarkIcon className={iconSize}/>\n    if (props.type === \"research\") {\n        icon = <ResearchIcon className={iconSize}/>\n    }\n    \n    return (\n        <div className={styles.container}> \n            {icon}\n            <div className={textSize}> \n                {props.text} \n            </div>\n        </div>\n    )\n}\n\n\nexport default IconText;","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport SmallThumbnailPost from \"../components/smallThumbnailPost\"\nimport IconText from \"../components/icon-note\"\nimport styles from \"../styles/index.module.css\"\n\n\nexport default function Home({ data }) {\n  let projectList = data.allMarkdownRemark.edges.filter(function (edge) {\n    return edge && edge.node.fields.slug.indexOf('/projects') === 0;\n  })\n\n  let blogList = data.allMarkdownRemark.edges.filter(function (edge) {\n    return edge && edge.node.fields.slug.indexOf('/blog') === 0;\n  })\n\n  let profilePic = data.allFile.nodes.filter(function(node) {\n    return node && node.childImageSharp.fluid.originalName === \"profile-picture.png\";\n  })[0]\n\n  return (\n    <Layout>\n      <SEO title=\"Lookdeceline\"/>\n      <div className={styles.about}>\n        <div>\n          <h1 className={styles.subSectionTitle}>About Me</h1>\n          <h2 className={styles.intro}>\n          Hi, I‚Äôm Celine and an iOS developer. My development interest lies in the intersection of designing \n          and writing codes to build fluid user experience on iOS. \n          This site is to recap what I‚Äôve learned in the process. \n          I designed, built, and maintain this site. üë©üèª‚Äçüíª\n          </h2>\n        </div>  \n        {/* <Img className={styles.profileImage} fluid={data.file.childImageSharp.fluid} /> */}\n        <Img className={styles.profileImage} fluid={profilePic.childImageSharp.fluid} />\n      </div> \n\n      <div className={styles.body}>\n        <div className = {styles.projectSection}>\n          <h3 className={styles.subSectionTitle}>Projects</h3>\n          {/* a list of projects  */}\n          <div className={styles.cardsContainer}>\n            {projectList.map(({ node }) => (\n              <Link to={`/projects/${node.frontmatter.path}`} >\n              <div key={node.id} className={styles.cardItem}\n                style={{backgroundColor: node.frontmatter.backgroundColor}} >\n                {/* <Link to={node.fields.slug} > */}\n\n                  <div \n                  className={styles.imageContainer}\n                  // style={{ backgroundImage: `url(../images.earth)`}}\n                  \n                  // `url(${node.frontmatter.featuredImage.childImageSharp.fluid})`\n                  \n                  >\n                    <Img \n                    className={styles.image}\n                    fluid={node.frontmatter.featuredImage.childImageSharp.fluid} \n                    />\n                  </div>\n                    \n                  \n                  <div className={styles.cardContent}>\n                    <div className={styles.cardContentTitle}>\n                      {node.frontmatter.title}\n                    </div>\n                    {/* <p className={styles.cardContentDate}>\n                      {node.frontmatter.date}\n                    </p> */}\n                    <div className={styles.cardContentIntro}>\n                      {node.frontmatter.intro}\n                    </div>\n\n                    <IconText type={node.frontmatter.type} text={node.frontmatter.text} size=\"small\"/>\n                    \n                  </div>\n                  \n                {/* </Link> */}\n              </div>\n              </Link>\n            ))}\n          </div>\n        </div>\n\n        <div className={styles.blogSection}>\n          <h3 className={styles.subSectionTitle}>Blog Posts</h3>\n                  {/* a list of blog posts */}\n                  <div className={styles.cardsContainer}>\n                    {blogList.map(({ node }) => (\n                      <SmallThumbnailPost node={node}/>\n                      // <Link to={node.fields.slug} \n                      //   key={node.id} \n                      //   className={styles.cardItem}>\n                      //   {/* <div key={node.id} className={styles.cardItem}> */}\n                      //     <div className={styles.blogpostImageContainer} >\n                      //       <Img \n                      //       // className={styles.imageContainer}\n                      //       fluid={node.frontmatter.featuredImage.childImageSharp.fluid} />\n                      //     </div>  \n                      //     <div className={styles.cardContent}>\n                      //       <h4 className={styles.cardContentTitle}>\n                      //         {node.frontmatter.title}\n                      //       </h4>\n                      //       <p className={styles.cardContentDate}>\n                      //         {node.frontmatter.date}\n                      //       </p>\n                      //       <div className={styles.cardContentIntro}>\n                      //         {node.frontmatter.intro}\n                      //       </div>\n                      //       <div className={styles.smallTagsContainer}>\n                      //         {node.frontmatter.tags ? node.frontmatter.tags.map(( tag, index ) => {\n                      //           return (\n                      //             <SmallTagBox tag={tag} />\n                      //           )\n                      //         }) \n                      //         : null\n                      //         }\n                      //       </div>\n                      //     </div>\n                      //   {/* </div> */}\n                      // </Link>\n                    ))}\n                  </div>\n                  {/* <div className={styles.cardsContainer}>\n                    {data.allMarkdownRemark.edges.map(({ node }) => (\n                      <div key={node.id}>\n                        <Link to={node.fields.slug}>\n                          <h3>{node.frontmatter.title}</h3>\n                          <h5>{node.frontmatter.date}</h5>\n                          <p>{node.frontmatter.intro}</p>\n                          <Img fluid={node.frontmatter.featuredImage.childImageSharp.fluid} />\n                        </Link>\n                      </div>\n                    ))}\n                  </div> */}\n          </div>\n        \n      </div>\n    </Layout>\n\n  )\n}\n\n\nexport const query = graphql`\n  query {\n    file(relativePath: { eq: \"images/profile-picture.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 130) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    allFile(filter: {\n      absolutePath: {regex: \"/src/images/\"}, \n      extension: {regex: \"/(jpg)|(png)|(tif)|(tiff)|(webp)|(jpeg)/\"}\n    }) {\n      nodes {\n        childImageSharp {\n          fluid(maxWidth: 130) {\n            originalName\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"YYYY. MM. DD.\")\n            intro\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            backgroundColor\n            tags\n            type\n            text\n            path\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsContainer\":\"smallThumbnailPost-module--cardsContainer--1DWVB\",\"cardItem\":\"smallThumbnailPost-module--cardItem--3Qnxe\",\"blogpostImageContainer\":\"smallThumbnailPost-module--blogpostImageContainer--3j454\",\"image\":\"smallThumbnailPost-module--image--3nxsg\",\"cardContent\":\"smallThumbnailPost-module--cardContent--3wsQ6\",\"cardHeader\":\"smallThumbnailPost-module--cardHeader--2mW49\",\"cardContentDate\":\"smallThumbnailPost-module--cardContentDate--2X_qY\",\"cardContentTitle\":\"smallThumbnailPost-module--cardContentTitle--3aK7T\",\"cardContentIntro\":\"smallThumbnailPost-module--cardContentIntro--YZ4Tn\",\"appStore\":\"smallThumbnailPost-module--appStore--1u4nE\",\"smallTagsContainer\":\"smallThumbnailPost-module--smallTagsContainer--3Q0N2\"};","import React from 'react'\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport SmallTagBox from \"./smallTagBox\"\nimport styles from \"./styles/smallThumbnailPost.module.css\"\n\nconst SmallThumbnailPost = ({ node }) => {\n    return (\n        <Link to={`/blog/${node.frontmatter.path}`} \n            key={node.id} \n            className={styles.cardItem}>\n            {/* <div key={node.id} className={styles.cardItem}> */}\n            \n            <div className={styles.cardContent}>\n              {/* <div className={styles.cardHeader}>\n                <p className={styles.cardContentDate}>\n                  {node.frontmatter.date}\n                </p>\n\n                <div className={styles.blogpostImageContainer} >\n                  <Img \n                  // className={styles.imageContainer}\n                  fluid={node.frontmatter.featuredImage.childImageSharp.fluid} />\n                </div>  \n              </div> */}\n\n              <div className={styles.cardContentTitle}>\n                üóí {node.frontmatter.title}\n              </div>\n\n              <div className={styles.cardContentIntro}>\n                  {node.frontmatter.intro}\n              </div>\n\n              <div className={styles.smallTagsContainer}>\n                  {node.frontmatter.tags ? node.frontmatter.tags.map(( tag, index ) => {\n                      return (\n                          <SmallTagBox tag={tag} />\n                      )\n                  }) \n                  : null\n                  }\n              </div>\n          </div>\n\n          \n        {/* </div> */}\n        </Link>\n    )\n}\n\n\nexport default SmallThumbnailPost;\n\n\n\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: \n        { fields: [frontmatter___date], order: DESC },\n        filter: {fileAbsolutePath: {regex: \"/(blog)/.*.md$/\"}}\n        ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"YYYY. MM. DD.\")\n            intro\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            backgroundColor\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"icon-note-module--container--yVkuK\",\"iconSmall\":\"icon-note-module--iconSmall--1YjjC\",\"iconMedium\":\"icon-note-module--iconMedium--3YEfM\",\"textSmall\":\"icon-note-module--textSmall--KGzBX\",\"textMedium\":\"icon-note-module--textMedium--2ouEz\"};","var React = require('react');\n\nfunction Checkmark (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M6.4935 15.247C7.49784 16.251 8.50217 16.251 9.50649 15.247L10.4762 14.2776C10.5455 14.2084 10.5974 14.1911 10.684 14.1911H12.0606C13.4805 14.1911 14.1905 13.4727 14.1905 12.0619V10.6858C14.1905 10.5992 14.2164 10.5386 14.2771 10.478L15.2468 9.50869C16.2511 8.50469 16.2511 7.50071 15.2468 6.49672L14.2771 5.52734C14.2078 5.4581 14.1905 5.40619 14.1905 5.31963V3.94347C14.1905 2.52404 13.4719 1.81432 12.0606 1.81432H10.684C10.5974 1.81432 10.5368 1.78835 10.4762 1.72777L9.50649 0.758407C8.4935 -0.254239 7.49784 -0.25424 6.4935 0.767057L5.52381 1.72777C5.46321 1.78835 5.4026 1.81432 5.31602 1.81432H3.93939C2.51948 1.81432 1.80952 2.51539 1.80952 3.94347V5.31963C1.80952 5.40619 1.78354 5.46677 1.72294 5.52734L0.753249 6.49672C-0.251083 7.50071 -0.251083 8.50469 0.753249 9.50869L1.72294 10.478C1.78354 10.5386 1.80952 10.5992 1.80952 10.6858V12.0619C1.80952 13.4814 2.52815 14.1911 3.93939 14.1911H5.31602C5.4026 14.1911 5.45455 14.2084 5.52381 14.2776L6.4935 15.247ZM6.9264 11.5859C6.62338 11.5859 6.31168 11.482 6.07793 11.2224L4.09523 8.99803C3.93939 8.82494 3.85282 8.5826 3.85282 8.36622C3.85282 7.78633 4.25974 7.37087 4.83983 7.37087C5.16017 7.37087 5.41125 7.49205 5.60173 7.70842L6.90909 9.17979L9.70563 5.05997C9.92208 4.76571 10.1905 4.62722 10.5368 4.62722C11.1429 4.62722 11.5671 5.0167 11.5671 5.57063C11.5671 5.75238 11.4892 5.99473 11.342 6.19379L7.82685 11.1531C7.5671 11.4907 7.27273 11.5859 6.9264 11.5859Z\",\"fill\":\"#0B70CA\"}));\n}\n\nCheckmark.defaultProps = {\"width\":\"16\",\"height\":\"16\",\"viewBox\":\"0 0 16 16\",\"fill\":\"none\"};\n\nmodule.exports = Checkmark;\n\nCheckmark.default = Checkmark;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"index-module--about--jXzWA\",\"intro\":\"index-module--intro--1svyt\",\"subSectionTitle\":\"index-module--subSectionTitle--37uux\",\"profileImage\":\"index-module--profileImage--1Cd9z\",\"body\":\"index-module--body--AmiUw\",\"blogSection\":\"index-module--blogSection--2Kq68\",\"cardsContainer\":\"index-module--cardsContainer--Njzax\",\"cardItem\":\"index-module--cardItem--3Qdx5\",\"imageContainer\":\"index-module--imageContainer--Prvoh\",\"blogpostImageContainer\":\"index-module--blogpostImageContainer--1pdxp\",\"image\":\"index-module--image--LHmLZ\",\"cardContent\":\"index-module--cardContent--bxX4J\",\"cardContentTitle\":\"index-module--cardContentTitle--3tPVC\",\"cardContentDate\":\"index-module--cardContentDate--292vG\",\"cardContentIntro\":\"index-module--cardContentIntro--1e_vM\",\"appStore\":\"index-module--appStore--2w3kP\",\"smallTagsContainer\":\"index-module--smallTagsContainer--1ZUDD\",\"projectsPageCardsContainer\":\"index-module--projectsPageCardsContainer--22t3S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"smallTagBox-module--tag--43eY2\"};","import React from 'react'\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\n\nimport styles from \"./styles/smallTagBox.module.css\"\n\nconst SmallTagBox = (props) => {\n    return (\n        <div className={styles.tag}>{props.tag}</div>\n    )\n}\n\n\nexport default SmallTagBox;"],"sourceRoot":""}